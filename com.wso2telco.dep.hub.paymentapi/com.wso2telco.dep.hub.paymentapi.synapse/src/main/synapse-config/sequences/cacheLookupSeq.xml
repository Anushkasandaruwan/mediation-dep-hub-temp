<?xml version="1.0" encoding="UTF-8"?>
<sequence name="cacheLookupSeq" onError="operatorConfigReaderSeq"
  trace="disable" xmlns="http://ws.apache.org/ns/synapse">
  <property expression="$trp:Authorization" name="auth-header"
    scope="default" type="STRING"/>
  <class name="org.wso2telco.dep.nashornmediator.NashornMediator">
      <property name="script" value="
        var String = Java.type('java.lang.String');
        var temp_auth = mc.getProperty('jwt-header').trim();
        var val= temp_auth.split('.');
        var auth=val[1];
        var jsonObj = JSON.parse(new String(Packages.org.apache.commons.codec.binary.Base64.decodeBase64(auth),'UTF-8'));
        mc.setProperty('uri.var.onBehalfOf',jsonObj['http://wso2.org/claims/subscriber']);
      "/>
  </class>
  <property expression="get-property('endUserId')"
    name="uri.var.userAddress" scope="default" type="STRING"/>
  <class name="com.wso2telco.dep.spend.limit.mediation.mediator.PackageTypeLookupMediator"/>
  <filter regex="true" source="boolean(get-property('userpackagetype'))" xmlns:ns="http://org.apache.synapse/xsd">
    <then>
      <log level="custom" xmlns="http://ws.apache.org/ns/synapse">
        <property name="cacheLookupSeq" value="Found in cache"/>
      </log>
      <sequence key="filterCheckLimitSeq"/>
    </then>
    <else>
      <log level="custom" xmlns="http://ws.apache.org/ns/synapse">
        <property name="cacheLookupSeq" value="Not found in cache"/>
      </log>
      <sequence key="operatorConfigReaderSeq"/>
    </else>
  </filter>
</sequence>
